{"ast":null,"code":"import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, createElementObject, extendContext, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl(_ref, ctx) {\n  let {\n    children: _c,\n    ...options\n  } = _ref;\n  const control = new Control.Layers(undefined, undefined, options);\n  return createElementObject(control, extendContext(ctx, {\n    layersControl: control\n  }));\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement); // @ts-ignore\n\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl?.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => {\n      return extendContext(parentContext, {\n        layerContainer: {\n          addLayer,\n          removeLayer\n        }\n      });\n    }, [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","map":{"version":3,"names":["LeafletProvider","createContainerComponent","createControlHook","createElementHook","createElementObject","extendContext","useLeafletContext","Control","React","useCallback","useEffect","useMemo","useRef","useState","useLayersControlElement","createLayersControl","ctx","children","_c","options","control","Layers","undefined","layersControl","updateLayersControl","props","prevProps","collapsed","collapse","expand","useLayersControl","LayersControl","createControlledLayer","addLayerToControl","ControlledLayer","parentContext","propsRef","layer","setLayer","map","addLayer","layerToAdd","current","checked","name","removeLayer","layerToRemove","context","layerContainer","createElement","value","BaseLayer","addBaseLayer","Overlay","addOverlay"],"sources":["C:/Users/Md Jamal Uddin/Desktop/IP-Address-Tracking-app-react-master/node_modules/react-leaflet/lib/LayersControl.js"],"sourcesContent":["import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, createElementObject, extendContext, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({ children: _c , ...options }, ctx) {\n    const control = new Control.Layers(undefined, undefined, options);\n    return createElementObject(control, extendContext(ctx, {\n        layersControl: control\n    }));\n}, function updateLayersControl(control, props, prevProps) {\n    if (props.collapsed !== prevProps.collapsed) {\n        if (props.collapsed === true) {\n            control.collapse();\n        } else {\n            control.expand();\n        }\n    }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n    return function ControlledLayer(props) {\n        const parentContext = useLeafletContext();\n        const propsRef = useRef(props);\n        const [layer, setLayer] = useState(null);\n        const { layersControl , map  } = parentContext;\n        const addLayer = useCallback((layerToAdd)=>{\n            if (layersControl != null) {\n                if (propsRef.current.checked) {\n                    map.addLayer(layerToAdd);\n                }\n                addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n                setLayer(layerToAdd);\n            }\n        }, [\n            layersControl,\n            map\n        ]);\n        const removeLayer = useCallback((layerToRemove)=>{\n            layersControl?.removeLayer(layerToRemove);\n            setLayer(null);\n        }, [\n            layersControl\n        ]);\n        const context = useMemo(()=>{\n            return extendContext(parentContext, {\n                layerContainer: {\n                    addLayer,\n                    removeLayer\n                }\n            });\n        }, [\n            parentContext,\n            addLayer,\n            removeLayer\n        ]);\n        useEffect(()=>{\n            if (layer !== null && propsRef.current !== props) {\n                if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n                    map.addLayer(layer);\n                } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n                    map.removeLayer(layer);\n                }\n                propsRef.current = props;\n            }\n        });\n        return props.children ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children) : null;\n    };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n    layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n    layersControl.addOverlay(layer, name);\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}